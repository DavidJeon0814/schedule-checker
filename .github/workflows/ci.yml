name: Create Docker Images by Github Actions for Schedule Checker App

on:
  push:
    branches:
      - main

env:
  DOCKER_IMAGE1: ghcr.io/kimyunbeom/schedulechecker_be_home
  DOCKER_IMAGE2: ghcr.io/kimyunbeom/schedulechecker_be_auth
  DOCKER_IMAGE3: ghcr.io/kimyunbeom/schedulechecker_be_member
  DOCKER_IMAGE4: ghcr.io/kimyunbeom/schedulechecker_fe
  VERSION_LATEST: latest

jobs:
  be-home:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./be-home # /home/runner/work/schedule-checker/schedule-checker/be-home
    steps:
      - name: Import actions from github
        uses: actions/checkout@v3

      - name: Check build date
        run: |
          echo "BUILD_DATE=$(date '+%Y-%m-%d_%H:%M:%S')"
          echo "BUILD_ID=${GITHUB_RUN_ID}"

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: npm install
        run: npm ci

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ghcr(GitHub Container Registry)
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REPO }}

      - name: Build and push
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: be-home
          file: be-home/Dockerfile
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.DOCKER_IMAGE1 }}:${{ env.VERSION_LATEST }}
  be-auth:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./be-auth
    steps:
      - name: Import actions from github
        uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: npm install
        run: npm ci

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ghcr(GitHub Container Registry)
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REPO }}

      - name: Build and push
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: be-auth
          file: be-auth/Dockerfile
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.DOCKER_IMAGE2 }}:${{ env.VERSION_LATEST }}
  be-member:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./be-member
    steps:
      - name: Import actions from github
        uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: npm install
        run: npm ci

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ghcr(GitHub Container Registry)
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REPO }}

      - name: Build and push
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: be-member
          file: be-member/Dockerfile
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.DOCKER_IMAGE3 }}:${{ env.VERSION_LATEST }}
  fe:
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./fe
    steps:
      - name: Import actions from github
        uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Generate Environment Variables File for Production
        run: |
          echo "VITE_APP_GOOGLE_CLIENT_ID=$VITE_APP_GOOGLE_CLIENT_ID" >> .env.production
          echo "VITE_APP_SERVER=$VITE_APP_SERVER" >> .env.production
          echo "VITE_APP_IS_LOG=$VITE_APP_IS_LOG" >> .env.production
          echo "VITE_APP_BASE_URL_BACKEND_HOME=$VITE_APP_BASE_URL_BACKEND_HOME" >> .env.production
          echo "VITE_APP_BASE_URL_BACKEND_AUTH=$VITE_APP_BASE_URL_BACKEND_AUTH" >> .env.production
          echo "VITE_APP_BASE_URL_BACKEND_MEMBER=$VITE_APP_BASE_URL_BACKEND_MEMBER" >> .env.production
          echo "VITE_APP_BASE_URL_FRONTEND=$VITE_APP_BASE_URL_FRONTEND" >> .env.production
        env:
          VITE_APP_SERVER: ${{ secrets.VITE_APP_SERVER }}
          VITE_APP_IS_LOG: ${{ secrets.VITE_APP_IS_LOG }}
          VITE_APP_BASE_URL_BACKEND_HOME: ${{ secrets.VITE_APP_BASE_URL_BACKEND_HOME }}
          VITE_APP_BASE_URL_BACKEND_AUTH: ${{ secrets.VITE_APP_BASE_URL_BACKEND_AUTH }}
          VITE_APP_BASE_URL_BACKEND_MEMBER: ${{ secrets.VITE_APP_BASE_URL_BACKEND_MEMBER }}
          VITE_APP_BASE_URL_FRONTEND: ${{ secrets.VITE_APP_BASE_URL_FRONTEND }}
          VITE_APP_GOOGLE_CLIENT_ID: ${{secrets.VITE_APP_GOOGLE_CLIENT_ID}}

      - name: npm install
        run: npm ci

      - name: npm build
        run: npm run build

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ghcr(GitHub Container Registry)
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REPO }}

      - name: Build and push
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          context: fe
          file: fe/Dockerfile
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          tags: ${{ env.DOCKER_IMAGE4 }}:${{ env.VERSION_LATEST }}
